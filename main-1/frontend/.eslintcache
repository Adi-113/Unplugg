[{"C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\index.js":"1","C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\App.js":"3","C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\components\\Home.js":"4","C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\components\\Navbar.js":"5","C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\components\\Footer.js":"6","C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\components\\TodoHome.js":"7","C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\components\\userList.js":"8","C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\components\\TaskConatiner.js":"9","C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\components\\Login.js":"10","C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\components\\Register.js":"11","C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\hoc\\asyncImportComp.js":"12","C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\components\\Task.js":"13","C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\components\\GetTask.js":"14","C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\components\\UpdateForm.js":"15","C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\hoc\\Auxiliary.js":"16"},{"size":500,"mtime":1670659492725,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1670659492744,"results":"19","hashOfConfig":"18"},{"size":3149,"mtime":1671233620911,"results":"20","hashOfConfig":"18"},{"size":1666,"mtime":1670659492828,"results":"21","hashOfConfig":"18"},{"size":1312,"mtime":1671233654056,"results":"22","hashOfConfig":"18"},{"size":436,"mtime":1670659492792,"results":"23","hashOfConfig":"18"},{"size":2753,"mtime":1670659492941,"results":"24","hashOfConfig":"18"},{"size":430,"mtime":1670659492976,"results":"25","hashOfConfig":"18"},{"size":864,"mtime":1670659492922,"results":"26","hashOfConfig":"18"},{"size":5381,"mtime":1671234135511,"results":"27","hashOfConfig":"18"},{"size":8971,"mtime":1671237903514,"results":"28","hashOfConfig":"18"},{"size":531,"mtime":1670659493015,"results":"29","hashOfConfig":"18"},{"size":2239,"mtime":1670659492906,"results":"30","hashOfConfig":"18"},{"size":2179,"mtime":1670659492810,"results":"31","hashOfConfig":"18"},{"size":1388,"mtime":1670659492958,"results":"32","hashOfConfig":"18"},{"size":70,"mtime":1670659492997,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"3xc8te",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\index.js",[],["70","71"],"C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\App.js",["72"],"import './App.css';\nimport React, { useState, useEffect } from 'react'\nimport Navbar from './components/Navbar'\nimport Home from './components/Home'\nimport Footer from './components/Footer';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport userDets from './components/userList'\nimport TodoHome from './components/TodoHome'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n//import Arena from '../arena/Arena';\n// The component at the highest level. Manages base state.\nfunction App() {\n\n  // userList is to staore all the users from the database\n  const [userList, addUser] = useState(userDets)\n\n  // useEffect() used to load the usedetails from the db to userList state variable\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/users/\").then(res => {\n      //console.log(JSON.stringify(res.data))\n      if(res.data.length>0)\n        addUser([...res.data])\n    })\n      .catch(err => console.log(err))\n    console.log(\"Users loaded..\")\n  }, [])\n\n  const [userPos, setUserPos] = useState(0)\n\n  // setTask function is to add tasks to a specific user objects tasks field.\n  const setTask = (tasks) => {\n    let pos = 0\n    addUser(() => {\n      const newUser = userList.map(user => {\n        if (pos === userPos) {\n          user.tasks = tasks\n        }\n        pos += 1\n        return user\n      })\n      return newUser\n    })\n  }\n  //setArena()]\n  // setUser() checks which user is logged in and sets isLogged and returns the modified userList\n  const setUser = () => {\n    let pos = 0\n    addUser(() => {\n      const newUser = userList.map(user => {\n        if (pos === userPos) {\n          const temp = !user.logged\n          user.logged = temp\n          localStorage.setItem(\"uid\", user.id)\n          localStorage.setItem(\"logged\", false)\n          axios.put(\"http://localhost:5000/api/users/\" + user.id + \"/logout\", { logged: temp })\n        }\n        pos += 1\n        return user\n      })\n\n      return newUser\n    })\n  }\n\n  /* Conditional rendering for user being logged in or not. Displays TodoHome component if logged in, \n     else displays Error message and prompts to login again. */\n  return (\n    <Router>\n      <div className=\"main\">\n        <Navbar logged={userList[userPos].logged}  setUser={setUser} />\n      \n\n        <Home userList={userList} addUser={addUser} userPos={userPos} setUserPos={setUserPos} setTask={setTask} />\n        <Switch>\n          <Route path=\"/todohome\" exact render={() => {\n            if (userList[userPos].logged === true)\n              return <TodoHome user={userList[userPos]} tasks={userList[userPos].tasks} setTask={setTask} />\n            else\n              return (\n                <div style={{ height: \"100%\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", flexDirection: \"column\" }}>\n                  <h2>Please Login again</h2>\n                  <Link to=\"/\">\n                    <input className=\"btn btn-large btn-info\" type=\"button\" value=\"Login\" />\n                  </Link>\n                </div>\n              )\n          }} />\n          \n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\components\\Home.js",[],"C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\components\\Navbar.js",["73"],"import React from 'react'\nimport '../static/styles/Navbar.css'\nimport { Link } from 'react-router-dom'\n//import Arena from './components/arena/Arena';\n// NavBar Component which is always displayed\nfunction Navbar({ logged, setUser }) {\n\n    // navComp will be initialized by conditionally rendering by checking if user is logged in or not.\n    let navComp;\n    if (logged !== true) {\n        // If the user is not logged in, it displays register and contact nav items\n        navComp = (\n            <div className=\"links\">\n                <Link to=\"/register\" style={{ textDecoration: \"none\", color: \"lightcyan\" }} >\n                    <h4 id=\"reg\">Register</h4>\n                </Link>\n            </div>\n        )\n    }\n    else {\n        // If the user is logged in, it displays logout nav item\n        navComp = (\n            <div className=\"links\">\n                <Link to=\"/\" style={{ textDecoration: \"none\", color: \"lightcyan\" }}>\n                    <h4 id=\"reg\" onClick={() => setUser()}>Logout</h4>\n                </Link>\n            </div>\n        )\n        \n    }\n    let titleComp = logged ? \"Home\" : \"\"\n    return (\n        <header>\n            <div className=\"title\">\n                <h1> Unplugg .</h1>\n            </div>\n            {navComp}\n        </header>\n    )\n}\nexport default Navbar\n","C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\components\\TodoHome.js",[],"C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\components\\userList.js",[],"C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\components\\TaskConatiner.js",[],"C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\components\\Login.js",[],"C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\components\\Register.js",[],"C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\hoc\\asyncImportComp.js",[],"C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\components\\Task.js",[],"C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\components\\GetTask.js",[],"C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\components\\UpdateForm.js",[],"C:\\Users\\adith\\OneDrive\\Desktop\\FSD project main\\mern-todo-app-main\\frontend\\src\\hoc\\Auxiliary.js",[],["74","75"],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":5,"column":8,"nodeType":"82","messageId":"83","endLine":5,"endColumn":14},{"ruleId":"80","severity":1,"message":"84","line":31,"column":9,"nodeType":"82","messageId":"83","endLine":31,"endColumn":18},{"ruleId":"76","replacedBy":"85"},{"ruleId":"78","replacedBy":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'titleComp' is assigned a value but never used.",["87"],["88"],"no-global-assign","no-unsafe-negation"]